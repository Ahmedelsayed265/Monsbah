import{useEffect,useState,useMemo}from"react";import{useCookies}from"react-cookie";import{useDispatch}from"react-redux";import{jwtDecode}from"jwt-decode";import{setClientData}from"../redux/slices/clientData";import axiosInstance from"../utils/axiosInstance";import useGetAuthedUser from"../hooks/users/useGetAuthedUser";export default function useAuth(){const dispatch=useDispatch(),[loading,setLoading]=useState(!0),[isAuthed,setIsAuthed]=useState(!1),[cookies,,removeCookie]=useCookies(["token","id"]),{token:token,id:id}=cookies,{decodedToken:decodedToken,isExpired:isExpired}=useMemo((()=>{if(!token)return{decodedToken:null,isExpired:!0};try{const decoded=jwtDecode(token),currentTime=Date.now()/1e3;return{decodedToken:decoded,isExpired:decoded.exp<currentTime}}catch(error){return console.error("Error decoding token:",error),{decodedToken:null,isExpired:!0}}}),[token]);useEffect((()=>{token&&(axiosInstance.defaults.headers.common.Authorization=`bearer ${token}`)}),[token]);const{data:profile,isFetched:isFetched,refetch:refetch}=useGetAuthedUser(Boolean(token&&id&&!isExpired));return useEffect((()=>{if(isExpired||Number(decodedToken?.sub)!==Number(id))return dispatch(setClientData({})),removeCookie("token"),removeCookie("id"),setLoading(!1),void setIsAuthed(!1);(async()=>{try{isFetched?profile?(dispatch(setClientData(profile)),setIsAuthed(!0)):(console.log("Profile data not available, refetching..."),await refetch(),setIsAuthed(!0)):await refetch()}catch(error){console.error("Error fetching profile:",error),setIsAuthed(!1)}finally{setLoading(!1)}})()}),[decodedToken?.sub,dispatch,id,isExpired,isFetched,profile,refetch,removeCookie]),{loading:loading,isAuthed:isAuthed}}